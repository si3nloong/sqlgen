// Code generated by sqlgen, version v1.0.0-alpha. DO NOT EDIT.

package binary

import (
	"database/sql/driver"
	"time"

	"github.com/si3nloong/sqlgen/sequel/types"
)

func (v Binary) CreateTableStmt() string {
	return "CREATE TABLE IF NOT EXISTS " + v.TableName() + " (`id` BINARY(16) NOT NULL,`str` VARCHAR(255) NOT NULL,`time` DATETIME NOT NULL,PRIMARY KEY (`id`));"
}
func (Binary) AlterTableStmt() string {
	return "ALTER TABLE `binary` MODIFY `id` BINARY(16) NOT NULL,MODIFY `str` VARCHAR(255) NOT NULL AFTER `id`,MODIFY `time` DATETIME NOT NULL AFTER `str`;"
}
func (Binary) TableName() string {
	return "`binary`"
}
func (Binary) InsertVarStmt() string {
	return "(?,?,?)"
}
func (Binary) Columns() []string {
	return []string{"`id`", "`str`", "`time`"}
}
func (v Binary) IsAutoIncr() bool {
	return false
}
func (v Binary) PK() (columnName string, pos int, value driver.Value) {
	return "`id`", 0, types.BinaryMarshaler(v.ID)
}
func (v Binary) Values() []any {
	return []any{types.BinaryMarshaler(v.ID), string(v.Str), time.Time(v.Time)}
}
func (v *Binary) Addrs() []any {
	return []any{types.BinaryUnmarshaler(&v.ID), types.String(&v.Str), (*time.Time)(&v.Time)}
}
