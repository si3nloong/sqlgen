// Code generated by sqlgen. DO NOT EDIT.

package readonly

import (
	"time"

	"github.com/shopspring/decimal"
	"github.com/si3nloong/sqlgen/sequel"
)

func (A) TableName() string {
	return "a"
}
func (A) HasPK() {}
func (v A) PK() (string, int, any) {
	return "id", 0, v.ID
}
func (A) Columns() []string {
	return []string{"id", "time", "dec"} // 3
}
func (v *A) Addrs() []any {
	return []any{
		&v.ID,   // 0 - id
		&v.Time, // 1 - time
		&v.Dec,  // 2 - dec
	}
}
func (v A) FindOneByPKStmt() (string, []any) {
	return "SELECT `id`,`time`,`dec` FROM `a` WHERE `id` = ? LIMIT 1;", []any{v.ID}
}
func (v A) IDValue() any {
	return v.ID
}
func (v A) TimeValue() any {
	return v.Time
}
func (v A) DecValue() any {
	return v.Dec
}
func (v A) ColumnID() sequel.ColumnClause[string] {
	return sequel.BasicColumn("id", v.ID)
}
func (v A) ColumnTime() sequel.ColumnClause[time.Time] {
	return sequel.BasicColumn("time", v.Time)
}
func (v A) ColumnDec() sequel.ColumnConvertClause[decimal.Decimal] {
	return sequel.Column("dec", v.Dec, func(val decimal.Decimal) any {
		return val
	})
}
