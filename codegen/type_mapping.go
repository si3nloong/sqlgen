package codegen

var (
	typeMap = map[string]*Mapping{
		"string":                         {"string({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.String({{addrOfGoPath}})"},
		"[]byte":                         {"string({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.String({{addrOfGoPath}})"},
		"bool":                           {"bool({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Bool({{addrOfGoPath}})"},
		"uint":                           {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"uint8":                          {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"uint16":                         {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"uint32":                         {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"uint64":                         {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"int":                            {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"int8":                           {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"int16":                          {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"int32":                          {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"int64":                          {"int64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Integer({{addrOfGoPath}})"},
		"float32":                        {"float64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Float({{addrOfGoPath}})"},
		"float64":                        {"float64({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Float({{addrOfGoPath}})"},
		"time.Time":                      {"time.Time({{goPath}})", "(*time.Time)({{addrOfGoPath}})"},
		"cloud.google.com/go/civil.Date": {"github.com/si3nloong/sqlgen/sequel/types.TextMarshaler({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.Date({{addrOfGoPath}})"},
		"sql.RawBytes":                   {"database/sql.RawBytes({{goPath}})", "(*database/sql.RawBytes)({{addrOfGoPath}})"},
		"*string":                        {"github.com/si3nloong/sqlgen/sequel/types.String({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfString({{addrOfGoPath}})"},
		"*[]byte":                        {"github.com/si3nloong/sqlgen/sequel/types.String({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfString({{addrOfGoPath}})"},
		"*bool":                          {"github.com/si3nloong/sqlgen/sequel/types.Bool({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfBool({{addrOfGoPath}})"},
		"*uint":                          {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*uint8":                         {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*uint16":                        {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*uint32":                        {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*uint64":                        {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*int":                           {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*int8":                          {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*int16":                         {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*int32":                         {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*int64":                         {"github.com/si3nloong/sqlgen/sequel/types.Integer({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfInt({{addrOfGoPath}})"},
		"*float32":                       {"github.com/si3nloong/sqlgen/sequel/types.Float({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfFloat({{addrOfGoPath}})"},
		"*float64":                       {"github.com/si3nloong/sqlgen/sequel/types.Float({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfFloat({{addrOfGoPath}})"},
		"*time.Time":                     {"github.com/si3nloong/sqlgen/sequel/types.Time({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.PtrOfTime({{addrOfGoPath}})"},
		"[]string":                       {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalStringList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.StringList({{addrOfGoPath}})"},
		"[]bool":                         {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalBoolList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.BoolList({{addrOfGoPath}})"},
		"[]int":                          {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalSignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.IntList({{addrOfGoPath}})"},
		"[]int8":                         {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalSignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.IntList({{addrOfGoPath}})"},
		"[]int16":                        {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalSignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.IntList({{addrOfGoPath}})"},
		"[]int32":                        {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalSignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.IntList({{addrOfGoPath}})"},
		"[]int64":                        {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalSignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.IntList({{addrOfGoPath}})"},
		"[]uint":                         {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalUnsignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.UintList({{addrOfGoPath}})"},
		"[]uint8":                        {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalUnsignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.UintList({{addrOfGoPath}})"},
		"[]uint16":                       {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalUnsignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.UintList({{addrOfGoPath}})"},
		"[]uint32":                       {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalUnsignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.UintList({{addrOfGoPath}})"},
		"[]uint64":                       {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalUnsignedIntList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.UintList({{addrOfGoPath}})"},
		"[]float32":                      {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalFloatList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.FloatList({{addrOfGoPath}})"},
		"[]float64":                      {"github.com/si3nloong/sqlgen/sequel/encoding.MarshalFloatList({{goPath}})", "github.com/si3nloong/sqlgen/sequel/types.FloatList({{addrOfGoPath}})"},
		"[...]rune":                      {"string({{goPath}}[:])", "github.com/si3nloong/sqlgen/sequel/types.FixedSizeRunes({{goPath}}[:],{{len}})"},
		"[...]byte":                      {"string({{goPath}}[:])", "github.com/si3nloong/sqlgen/sequel/types.FixedSizeBytes({{goPath}}[:],{{len}})"},
	}
)

type Mapping struct {
	Encoder Expr
	Decoder Expr
}
