// Code generated by sqlgen, version 1.0.0. DO NOT EDIT.

package pk

import (
	"database/sql/driver"

	"github.com/si3nloong/sqlgen/sql/types"
)

// Implements `sql.Valuer` interface.
func (Car) Table() string {
	return "car"
}

func (v Car) Key() (driver.Value, error) {
	return ((driver.Valuer)(v.ID)).Value()
}

func (Car) Columns() []string {
	return []string{"id", "no", "color", "manuc_date"}
}

func (v Car) Values() []any {
	return []any{(driver.Valuer)(v.ID), string(v.No), int64(v.Color), v.ManucDate}
}

func (v *Car) Addrs() []any {
	return []any{types.Integer(&v.ID), types.String(&v.No), types.Integer(&v.Color), &v.ManucDate}
}

// Implements `sql.Valuer` interface.
func (User) Table() string {
	return "user"
}

func (v User) Key() (driver.Value, error) {
	return v.ID, nil
}

func (User) Columns() []string {
	return []string{"id", "name", "age", "email"}
}

func (v User) Values() []any {
	return []any{int64(v.ID), string(v.Name), int64(v.Age), string(v.Email)}
}

func (v *User) Addrs() []any {
	return []any{types.Integer(&v.ID), types.String(&v.Name), types.Integer(&v.Age), types.String(&v.Email)}
}
